{"remainingRequest":"/home/runner/work/Sistema_transmisi-n/Sistema_transmisi-n/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/Sistema_transmisi-n/Sistema_transmisi-n/src/views/Tema2.vue?vue&type=template&id=afb7f930&lang=pug","dependencies":[{"path":"/home/runner/work/Sistema_transmisi-n/Sistema_transmisi-n/src/views/Tema2.vue","mtime":1742534787782},{"path":"/home/runner/work/Sistema_transmisi-n/Sistema_transmisi-n/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/Sistema_transmisi-n/Sistema_transmisi-n/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/Sistema_transmisi-n/Sistema_transmisi-n/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/home/runner/work/Sistema_transmisi-n/Sistema_transmisi-n/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/Sistema_transmisi-n/Sistema_transmisi-n/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/Sistema_transmisi-n/Sistema_transmisi-n/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/Sistema_transmisi-n/Sistema_transmisi-n/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}